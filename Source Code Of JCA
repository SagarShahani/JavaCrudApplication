import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;


public class JavaCrud {
    private JPanel Main;
    private JTextField txtName;
    private JTextField txtPrice;
    private JTextField txtQty;
    private JButton saveButton;
    private JButton deleteButton;
    private JButton updateButton;

    Connection con;
    PreparedStatement pst;

    public JavaCrud() {
        connect();

        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String name, price, qty;
                name = txtName.getText();
                price = txtPrice.getText();
                qty = txtQty.getText();

                try {
                    pst = con.prepareStatement("insert into product(pname, price, qty) values(?, ?, ?)");
                    pst.setString(1, name);
                    pst.setString(2, price);
                    pst.setString(3, qty);
                    int i = pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Record Added!");

                    txtName.setText("");
                    txtPrice.setText("");
                    txtQty.setText("");
                    txtName.requestFocus();
                } catch (SQLException e1) {
                    e1.printStackTrace();
                }
            }
        });
        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {


                try {

                    String pid = txtpid.getText();
                    pst = con.prepareStatement("select pname,price,qty from product where pid = ?");
                    pst.setString(1, pid);
                    ResultSet rs = pst.executeQuery();

                    if(rs.next()==true)
                    {
                        String name = rs.getString(1);
                        String price = rs.getString(2);
                        String qty = rs.getString(3);

                        txtName.setText(name);
                        txtPrice.setText(price);
                        txtQty.setText(qty);
                    }
                    else
                    {
                        txtName.setText("");
                        txtPrice.setText("");
                        txtQty.setText("");
                        JOptionPane.showMessageDialog(null,"Invalid Product ID");

                    }
                }

                catch (SQLException ex)
                {
                    ex.printStackTrace();
                }
            }
        });
        updateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String pid, name, price, qty;

                name = txtName.getText();
                price = txtPrice.getText();
                qty = txtQty.getText();
                pid = txtpid.getText();

                try {
                    pst = con.prepareStatement("UPDATE product SET pname = ?, price = ?, qty = ? WHERE pid = ?");
                    pst.setString(1, name);
                    pst.setString(2, price);
                    pst.setString(3, qty);
                    pst.setString(4, pid);

                    int i = pst.executeUpdate();
                    if (i > 0) {
                        JOptionPane.showMessageDialog(null, "Record Updated!");
                        txtName.setText("");
                        txtPrice.setText("");
                        txtQty.setText("");
                        txtName.requestFocus();
                        txtpid.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Update Failed! Product ID not found.");
                    }
                } catch (SQLException e1) {
                    e1.printStackTrace();
                }
            }
        });

        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {


                String bid;

                bid = txtpid.getText();


                try {
                    pst = con.prepareStatement("delete from product  where pid = ?");
                    pst.setString(1, bid);

                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Record Deleteeeeee!!!!!");

                    txtName.setText("");
                    txtPrice.setText("");
                    txtQty.setText("");
                    txtName.requestFocus();
                    txtpid.setText("");
                }

                catch (SQLException e1)
                {

                    e1.printStackTrace();
                }
            }
        });
    }

    private void connect() {
        try {
            final String DB_URL = "jdbc:mysql://127.0.0.1:3306/";
            final String USERNAME = "root";
            final String PASSWORD = "B4Lovely";

            con = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);
            // Explicitly select the database after connecting
            con.createStatement().execute("USE javacrud"); // Replace 'javacrud' with your database name
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame("JavaCrud");
                frame.setContentPane(new JavaCrud().Main);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    private JTextField txtpid;
    private JButton searchButton;
}
